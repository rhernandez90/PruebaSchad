@model PruebaSchad.Models.ViewModels.InvoiceViewModel


@{
    ViewBag.Title = "Create";
}

<h2>Create Invoice</h2>

@using (Html.BeginForm("Create", "Invoices", FormMethod.Post, new { @id = "CreateInvoiceForm" }))
{
    @Html.AntiForgeryToken()

    <div class="form">
        <h4>Invoices</h4>
        <hr />

        <div class="row">

            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.CustomerId, "Customer", htmlAttributes: new { @class = "control-label" })
                <div class="">
                    @Html.DisplayFor(m => m.Customer)

                </div>
            </div>


          
        </div>

        <div class="row">
            <div class="form-group col-md-12">
                <table id="tblInvoiceDetail" class="table table-bordered table-responsive table-hover">
                    <tr>
                        <th>Description </th>
                        <th>Qty </th>
                        <th>Price </th>
                        @*<th>SubTotal</th>*@
                        <th>Total</th>


                    </tr>
                    <tbody>
                        @for (int a = 0; a < Model.InvoiceDetail.Count; a++)
                        {
                            <tr>
                                <td style="width:20%;">@Html.DisplayFor(m => m.InvoiceDetail[a].Description, new { @class = "validateID" })</td>
                                <td style="width:20%;">@Html.DisplayFor(m => m.InvoiceDetail[a].Qty, new { @class = "validateName QuantityRow", @type = "number" })</td>
                                <td style="width:20%;">@Html.DisplayFor(m => m.InvoiceDetail[a].Price, new { @class = "validateContact DetailPrice", @type = "number" })</td>
                                <td style="width:20%;">@Html.DisplayFor(m => (m.InvoiceDetail[a].Total), new { @class = "validateAddress TotalRow", @type = "number", @readonly = "true" })</td>
                            </tr>

                        }



                    </tbody>



                </table>

                <div class="row">
                    <div class="col-md-2 col-lg-offset-9">
                        <strong>Total:</strong>
                        @Html.DisplayFor(m => m.Total, new { @class = "", @id = "totalInvoice", @readonly = "true" })
                    </div>
                </div>

            </div>

        </div>



    </div>
}


<script type="text/javascript">




    $(function () {
        $(".DetailPrice").keyup(calculateResult);
        $(".DetailPrice").change(calculateResult);
        $(".DetailPrice").keydown(calculateResult);
    });


    function AddRow() {
        document.getElementById('AddLineText').checked = true;
        document.getElementById("CreateInvoiceForm").submit();

    }

    function SaveInvoice() {
        document.getElementById('AddLineText').checked = false;
        document.getElementById("CreateInvoiceForm").submit();

    }

    function calculateResult() {
        let quantity = 0;
        let price = 0;
        var tr = $(this).closest('tr');
        $(tr).find('td').each(function () {
            $(this).find('.QuantityRow').each(function () {
                quantity = $(this).val();
                console.log(quantity)
            });

            $(this).find('.DetailPrice').each(function () {
                price = $(this).val();
                console.log(price)
            });


            $(this).find('.TotalRow').each(function () {
                price = $(this).val(quantity * price);
            });
        });

        calculateTotal();
    }

    function Remove(button) {
        //Determine the reference of the Row using the Button.
        var row = $(button).closest("TR");
        var name = $("TD", row).eq(0).html();
        if (confirm("Do you want to delete this row ")) {
            //Get the reference of the Table.
            var table = $("#tblInvoiceDetail")[0];

            //Delete the Table row using it's Index.
            table.deleteRow(row[0].rowIndex);
        }

        calculateTotal();
    };

    function calculateTotal() {
        console.log("Calculando el total");
        var total = 0;
        const columnIdx = 3;
        $('#tblInvoiceDetail tbody tr').each(function () {

            var value = $('td', this).eq(columnIdx).find('.TotalRow').each(function () {
                total += parseFloat($(this).val());
            });
        });

        console.log("Total", total);
        $('#totalInvoice').val(total);





    }


</script>